// Generated by gencpp from file lidar_obstacle_detector/ObstacleInfo.msg
// DO NOT EDIT!


#ifndef LIDAR_OBSTACLE_DETECTOR_MESSAGE_OBSTACLEINFO_H
#define LIDAR_OBSTACLE_DETECTOR_MESSAGE_OBSTACLEINFO_H

#include <ros/service_traits.h>


#include <lidar_obstacle_detector/ObstacleInfoRequest.h>
#include <lidar_obstacle_detector/ObstacleInfoResponse.h>


namespace lidar_obstacle_detector
{

struct ObstacleInfo
{

typedef ObstacleInfoRequest Request;
typedef ObstacleInfoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ObstacleInfo
} // namespace lidar_obstacle_detector


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lidar_obstacle_detector::ObstacleInfo > {
  static const char* value()
  {
    return "22227c072563c2b3c6b68511985576c3";
  }

  static const char* value(const ::lidar_obstacle_detector::ObstacleInfo&) { return value(); }
};

template<>
struct DataType< ::lidar_obstacle_detector::ObstacleInfo > {
  static const char* value()
  {
    return "lidar_obstacle_detector/ObstacleInfo";
  }

  static const char* value(const ::lidar_obstacle_detector::ObstacleInfo&) { return value(); }
};


// service_traits::MD5Sum< ::lidar_obstacle_detector::ObstacleInfoRequest> should match
// service_traits::MD5Sum< ::lidar_obstacle_detector::ObstacleInfo >
template<>
struct MD5Sum< ::lidar_obstacle_detector::ObstacleInfoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lidar_obstacle_detector::ObstacleInfo >::value();
  }
  static const char* value(const ::lidar_obstacle_detector::ObstacleInfoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lidar_obstacle_detector::ObstacleInfoRequest> should match
// service_traits::DataType< ::lidar_obstacle_detector::ObstacleInfo >
template<>
struct DataType< ::lidar_obstacle_detector::ObstacleInfoRequest>
{
  static const char* value()
  {
    return DataType< ::lidar_obstacle_detector::ObstacleInfo >::value();
  }
  static const char* value(const ::lidar_obstacle_detector::ObstacleInfoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lidar_obstacle_detector::ObstacleInfoResponse> should match
// service_traits::MD5Sum< ::lidar_obstacle_detector::ObstacleInfo >
template<>
struct MD5Sum< ::lidar_obstacle_detector::ObstacleInfoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lidar_obstacle_detector::ObstacleInfo >::value();
  }
  static const char* value(const ::lidar_obstacle_detector::ObstacleInfoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lidar_obstacle_detector::ObstacleInfoResponse> should match
// service_traits::DataType< ::lidar_obstacle_detector::ObstacleInfo >
template<>
struct DataType< ::lidar_obstacle_detector::ObstacleInfoResponse>
{
  static const char* value()
  {
    return DataType< ::lidar_obstacle_detector::ObstacleInfo >::value();
  }
  static const char* value(const ::lidar_obstacle_detector::ObstacleInfoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LIDAR_OBSTACLE_DETECTOR_MESSAGE_OBSTACLEINFO_H
