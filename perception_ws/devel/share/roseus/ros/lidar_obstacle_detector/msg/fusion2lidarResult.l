;; Auto-generated. Do not edit!


(when (boundp 'lidar_obstacle_detector::fusion2lidarResult)
  (if (not (find-package "LIDAR_OBSTACLE_DETECTOR"))
    (make-package "LIDAR_OBSTACLE_DETECTOR"))
  (shadow 'fusion2lidarResult (find-package "LIDAR_OBSTACLE_DETECTOR")))
(unless (find-package "LIDAR_OBSTACLE_DETECTOR::FUSION2LIDARRESULT")
  (make-package "LIDAR_OBSTACLE_DETECTOR::FUSION2LIDARRESULT"))

(in-package "ROS")
;;//! \htmlinclude fusion2lidarResult.msg.html


(defclass lidar_obstacle_detector::fusion2lidarResult
  :super ros::object
  :slots (_lidar_bboxes ))

(defmethod lidar_obstacle_detector::fusion2lidarResult
  (:init
   (&key
    ((:lidar_bboxes __lidar_bboxes) (let (r) (dotimes (i 0) (push (instance lidar_obstacle_detector::LidarBBox :init) r)) r))
    )
   (send-super :init)
   (setq _lidar_bboxes __lidar_bboxes)
   self)
  (:lidar_bboxes
   (&rest __lidar_bboxes)
   (if (keywordp (car __lidar_bboxes))
       (send* _lidar_bboxes __lidar_bboxes)
     (progn
       (if __lidar_bboxes (setq _lidar_bboxes (car __lidar_bboxes)))
       _lidar_bboxes)))
  (:serialization-length
   ()
   (+
    ;; lidar_obstacle_detector/LidarBBox[] _lidar_bboxes
    (apply #'+ (send-all _lidar_bboxes :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; lidar_obstacle_detector/LidarBBox[] _lidar_bboxes
     (write-long (length _lidar_bboxes) s)
     (dolist (elem _lidar_bboxes)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; lidar_obstacle_detector/LidarBBox[] _lidar_bboxes
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _lidar_bboxes (let (r) (dotimes (i n) (push (instance lidar_obstacle_detector::LidarBBox :init) r)) r))
     (dolist (elem- _lidar_bboxes)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get lidar_obstacle_detector::fusion2lidarResult :md5sum-) "94e1487bbd7516e1d9285f8a19d02574")
(setf (get lidar_obstacle_detector::fusion2lidarResult :datatype-) "lidar_obstacle_detector/fusion2lidarResult")
(setf (get lidar_obstacle_detector::fusion2lidarResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result definition
lidar_obstacle_detector/LidarBBox[] lidar_bboxes


================================================================================
MSG: lidar_obstacle_detector/LidarBBox
geometry_msgs/Point point_min
geometry_msgs/Point point_max

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :lidar_obstacle_detector/fusion2lidarResult "94e1487bbd7516e1d9285f8a19d02574")


