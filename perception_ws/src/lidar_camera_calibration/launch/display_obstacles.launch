<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="camera" default="/camera/color" />

    <!-- Play rosbag record -->
    <include file="$(find lidar_camera_calibration)/launch/play_rosbag.launch">
    </include>

    <!-- Nodelet manager for this pipeline -->
    <node
        pkg="nodelet"
        type="nodelet"
        args="manager"
        name="lidar_camera_manager"
        output="screen" />

    <node
        pkg="image_proc"
        type="image_proc" 
        name="image_proc_node1" />

    <!-- Run image_proc/rectify nodelet -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="rectify_color"
        args="load image_proc/rectify lidar_camera_manager --no-bond" >
        
        <!-- Remap input topics -->
        <remap from="image_mono" to="$(arg camera)/image_raw" />
        <remap from="camera_info" to="$(arg camera)/camera_info" />

        <!-- Remap output topics -->
        <remap from="image_rect" to="$(arg camera)/image_rect" />
    </node>

    <!-- Wire static transform from the world to velodyne frame -->
    <!-- Fill args below with estimated transform X Y Z Y P R -->
    <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="world_velodyne_tf"
        output="screen"
        args="-0.06485756 -0.05683201 -0.10448115 3.1409457979447306 -0.01855264674509845 -1.5478010455633737 world velodyne" />

    <!-- Setup params for Camera-LiDAR calibration script -->
    <param name="camera_info_topic" type="str" value="$(arg camera)/camera_info" />
    <param name="image_color_topic" type="str" value="$(arg camera)/image_rect" />
    <param name="velodyne_points_topic" type="str" value="/os_cloud_node/points" />
    <param name="bounding_boxes_topic" type="str" value="/darknet_ros/bounding_boxes" />
    <param name="found_object_topic" type="str" value="/darknet_ros/found_object" />
    <!-- for velodyne pointcloud : /kitti/velo/pointcloud  and ours : /os_cloud_node/points -->

    <param name="camera_lidar_topic" type="str" value="$(arg camera)/camera_lidar" />
    <param name="obstacle_info_topic" type="str" value="/obstacle_info" />
    <param name="project_mode" type="bool" value="false" />
	
    <!-- Run Camera-LiDAR projection script -->
    <node   
        pkg="lidar_camera_calibration"
        type="calibrate_camera_lidar.py"
        name="calibrate_camera_lidar"
        output="screen" />

    <!-- Run display-obstacles script -->
    <node   
        pkg="lidar_camera_calibration"
        type="display_obstacles.py"
        name="display_obstacles"
        output="screen" />

    <!-- Run image view to display the projected points image -->
    <node 
        name="camera_lidar_projection" 
        pkg="image_view"
        type="image_view"
        respawn="false"
        output="screen">
        
        <!-- Remap input topics -->  
        <remap from="image" to="$(arg camera)/camera_lidar" />
    </node> 

</launch>
